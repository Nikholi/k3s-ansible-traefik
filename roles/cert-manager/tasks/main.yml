- name: Create cert-manager  directory on first master
  file:
    path: /tmp/cert-manager
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: Copy cert-manager values to first master
  template:
    src: "values.yml.j2"
    dest: /tmp/cert-manager/values.yml
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0644

- name: Copy cert-manager resolver configuration to first master
  template:
    src: "letsencrypt-{{ deployment_environment }}.yml.j2"
    dest: /tmp/cert-manager/letsencrypt.yml
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0644

- name: Copy cert-manager secret to first master
  template:
    src: "cloudflare-token-secret.yml.j2"
    dest: /tmp/cert-manager/cloudflare-token-secret.yml
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0644

- name: Copy internal tls config to first master
  template:
    src: "internal-tls.yml.j2"
    dest: /tmp/cert-manager/internal-tls.yml
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0644

- name: Copy internal tls config to first master
  template:
    src: "external-tls.yml.j2"
    dest: /tmp/cert-manager/external-tls.yml
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0644

- name: add cert-manager helm repo
  command:
    cmd: "helm repo add jetstack https://charts.jetstack.io"
  changed_when: true

- name: update helm repo
  command:
    cmd: "helm repo update"
  changed_when: true

- name: wait for k3s API server VIP {{ apiserver_endpoint }} to be available
  wait_for:
    host: "{{ apiserver_endpoint }}"
    port: 6443
    delay: 10

- name: create cert-manager namespace
  command:
    cmd: "kubectl create namespace cert-manager"
  changed_when: true

- name: apply cert-manager CRDs
  command:
    cmd: kubectl apply -f https://github.com/jetstack/cert-manager/releases/download/{{ cert_manager_version }}/cert-manager.crds.yaml
  changed_when: true

- name: deploy cert-manager using helm
  command:
    cmd: "helm install \
      cert-manager jetstack/cert-manager \
      --namespace cert-manager \
      --values=/tmp/cert-manager/values.yml \
      --version {{ cert_manager_version }}"
  changed_when: true

- name: wait 15s for cert-manager to fully deploy
  wait_for:
    timeout: 15

- name: apply cert-manager cloudflare secret
  command:
    cmd: kubectl apply -f /tmp/cert-manager/cloudflare-token-secret.yml
  changed_when: true

- name: apply cert-manager cluster issuer letsencrypt
  command:
    cmd: kubectl apply -f /tmp/cert-manager/letsencrypt.yml
  changed_when: true

- name: apply cert-manager internal tls
  command:
    cmd: kubectl apply -f /tmp/cert-manager/internal-tls.yml
  changed_when: true

- name: apply cert-manager external tls
  command:
    cmd: kubectl apply -f /tmp/cert-manager/external-tls.yml
  changed_when: true